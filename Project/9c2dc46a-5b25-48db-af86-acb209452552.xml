<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>IF&#xD;
	I_xEnable&#xD;
	AND&#xD;
	NOT Q_xActive&#xD;
THEN&#xD;
	Q_xActive:=TRUE;&#xD;
END_IF;&#xD;
IF &#xD;
	NOT I_xEnable&#xD;
THEN&#xD;
	Q_xActive:=FALSE;&#xD;
END_IF;&#xD;
&#xD;
CASE diState OF&#xD;
	0:&#xD;
		Q_sResult:='Robot In Manuale Joint';&#xD;
		IF&#xD;
			Q_xActive&#xD;
			AND&#xD;
			IQ_stJ1.Status.Ready&#xD;
			AND&#xD;
			IQ_stJ2.Status.Ready&#xD;
			AND&#xD;
			IQ_stJ3.Status.Ready&#xD;
			AND&#xD;
			IQ_stJ4.Status.Ready&#xD;
			AND&#xD;
			IQ_stJ5.Status.Ready&#xD;
			AND&#xD;
			IQ_stJ6.Status.Ready&#xD;
			AND&#xD;
			NOT I_xJogJoints&#xD;
		THEN&#xD;
			stHP_X.Offset:=Q_lrX;&#xD;
			stHP_Y.Offset:=Q_lrY;&#xD;
			stHP_Z.Offset:=Q_lrZ;&#xD;
			stHP_A.Offset:=Q_lrA;&#xD;
			diState:=1;&#xD;
		END_IF;&#xD;
	1:&#xD;
		Q_sResult:='Set Cartisian Position';&#xD;
		IF&#xD;
			SET_X.Done&#xD;
			AND&#xD;
			SET_Y.Done&#xD;
			AND&#xD;
			SET_Z.Done&#xD;
			AND&#xD;
			SET_A.Done&#xD;
		THEN&#xD;
			diState:=2;&#xD;
		END_IF;&#xD;
		IF&#xD;
			SET_X.Error&#xD;
			OR&#xD;
			SET_Y.Error&#xD;
			OR&#xD;
			SET_A.Error&#xD;
		THEN&#xD;
			diState:=-1;&#xD;
		END_IF;&#xD;
	2:&#xD;
		Q_sResult:='Gantry Activation';&#xD;
		IF &#xD;
			GANTRY_MOVE_J3.Done&#xD;
			AND&#xD;
			GANTRY_MOVE_J4.Done&#xD;
		THEN&#xD;
			diState:=3;&#xD;
		END_IF;&#xD;
		&#xD;
	3:&#xD;
		Q_sResult:='Robot Ready';&#xD;
		IF&#xD;
			SYNC_J1.Active&#xD;
			AND&#xD;
			SYNC_J2.Active&#xD;
			AND&#xD;
			SYNC_J3.Active&#xD;
			AND&#xD;
			SYNC_J4.Active&#xD;
			AND&#xD;
			SYNC_J6.Active&#xD;
		THEN&#xD;
			diState:=4;&#xD;
		END_IF;&#xD;
		IF&#xD;
			SYNC_J1.Error&#xD;
			OR&#xD;
			SYNC_J2.Error&#xD;
			OR&#xD;
			SYNC_J3.Error&#xD;
			OR&#xD;
			SYNC_J4.Error&#xD;
			OR&#xD;
			SYNC_J6.Error&#xD;
		THEN&#xD;
			diState:=-3;&#xD;
		END_IF;&#xD;
	4:	&#xD;
		IF&#xD;
			IQ_stCNC_COORD_System.Status.Ready&#xD;
		THEN&#xD;
			Q_sResult:='Robot in Manual Mode';&#xD;
		ELSE&#xD;
			Q_sResult:='Robot in Auto Mode';&#xD;
		END_IF;	&#xD;
		IF&#xD;
			NOT I_xEnable&#xD;
		THEN&#xD;
			diState:=5;&#xD;
		END_IF;&#xD;
	5:&#xD;
		Q_sResult:='Braking...';&#xD;
		IF&#xD;
			STOP_CNC.Done&#xD;
		THEN&#xD;
			diState:=0&#xD;
			;&#xD;
		END_IF;&#xD;
		IF&#xD;
			STOP_CNC.Error&#xD;
		THEN&#xD;
			diState:=-5;&#xD;
		END_IF;&#xD;
END_CASE;&#xD;
&#xD;
FC_SCARA_DIR(&#xD;
	I_lrPos_J1:=IQ_stJ1.Cmd.Pos, &#xD;
	I_lrPos_J2:=IQ_stJ2.Cmd.pos, &#xD;
	I_lrL1:=I_lrL1, &#xD;
	I_lrL2:=I_lrL2, &#xD;
	Q_lrPos_X=&gt;Q_lrX, &#xD;
	Q_lrPos_Y=&gt;Q_lrY);&#xD;
&#xD;
Q_lrZ:=IQ_stJ5.CMD.Pos;&#xD;
Q_lrA:=IQ_stJ6.Cmd.Pos+IQ_stJ2.Cmd.Pos+IQ_stJ1.Cmd.Pos;&#xD;
&#xD;
FC_SCARA_INV(&#xD;
	I_lrPos_X:=IQ_stCNC_COORD_System.AxActPos.X, &#xD;
	I_lrPos_Y:=IQ_stCNC_COORD_System.AxActPos.Y, &#xD;
	I_lrL1:=I_lrL1, &#xD;
	I_lrL2:=I_lrL2, &#xD;
	Q_lrPos_J1=&gt;Q_lrJ1, &#xD;
	Q_lrPos_J2=&gt;Q_lrJ2);&#xD;
&#xD;
Q_lrJ6:=IQ_stCNC_COORD_System.AxActPos.A-(IQ_stJ2.Cmd.Pos+IQ_stJ1.Cmd.Pos);&#xD;
&#xD;
POWER_J1(&#xD;
	Axis:=IQ_stJ1, &#xD;
	Enable:=diState&gt;=0);&#xD;
POWER_J2(&#xD;
	Axis:=IQ_stJ2, &#xD;
	Enable:=diState&gt;=0);&#xD;
POWER_J3(&#xD;
	Axis:=IQ_stJ3, &#xD;
	Enable:=diState&gt;=0);&#xD;
POWER_J4(&#xD;
	Axis:=IQ_stJ4, &#xD;
	Enable:=diState&gt;=0);&#xD;
POWER_J5(&#xD;
	Axis:=IQ_stJ5, &#xD;
	Enable:=diState&gt;=0);&#xD;
POWER_J6(&#xD;
	Axis:=IQ_stJ6, &#xD;
	Enable:=diState&gt;=0);&#xD;
&#xD;
FOR i:=0 TO 3  DO&#xD;
	POWER_CNC[i](&#xD;
		Coord:=IQ_stCNC_COORD_System, &#xD;
		Enable:=I_xEnable,&#xD;
		LogicalMotorNo:=i);&#xD;
END_FOR;&#xD;
SET_X(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	HomingParameter:=stHP_X, &#xD;
	Execute:=diState=1, &#xD;
	LogicalMotorNo:=0);&#xD;
SET_Y(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	HomingParameter:=stHP_Y, &#xD;
	Execute:=diState=1 AND SET_X.Done, &#xD;
	LogicalMotorNo:=1);&#xD;
SET_Z(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	HomingParameter:=stHP_Z, &#xD;
	Execute:=diState=1 AND SET_Y.Done, &#xD;
	LogicalMotorNo:=2);&#xD;
SET_A(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	HomingParameter:=stHP_A, &#xD;
	Execute:=diState=1 AND SET_Z.Done, &#xD;
	LogicalMotorNo:=3);&#xD;
&#xD;
GANTRY_MOVE_J3(&#xD;
	Axis:=IQ_stJ3, &#xD;
	Execute:=diState=2, &#xD;
	Position:=IQ_stJ1.Act.Pos, &#xD;
	Velocity:=10.0, &#xD;
	Acceleration:=100.0, &#xD;
	Deceleration:=100.0,&#xD;
	Direction:=_eMC_DIRECTION#_mcShortestWay&#xD;
	);&#xD;
GANTRY_MOVE_J4(&#xD;
	Axis:=IQ_stJ4, &#xD;
	Execute:=diState=2, &#xD;
	Position:=IQ_stJ2.Act.Pos, &#xD;
	Velocity:=10.0, &#xD;
	Acceleration:=100.0, &#xD;
	Deceleration:=100.0,&#xD;
	Direction:=_eMC_DIRECTION#_mcShortestWay &#xD;
	);&#xD;
JOG_CNC(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	PositiveEnable:=I_xJog_FW, &#xD;
	NegativeEnable:=I_xJog_BW, &#xD;
	LogicalMotorNo:=I_uiMotorSelect, &#xD;
	Velocity:=600, &#xD;
	Acceleration:=6000);&#xD;
&#xD;
SYNC_J1(&#xD;
	Axis:=IQ_stJ1, &#xD;
	Execute:=diState=3, &#xD;
	Position:=Q_lrJ1 &#xD;
	);&#xD;
SYNC_J2(&#xD;
	Axis:=IQ_stJ2, &#xD;
	Execute:=diState=3, &#xD;
	Position:=Q_lrJ2 &#xD;
	);&#xD;
SYNC_J3(&#xD;
	Axis:=IQ_stJ3, &#xD;
	Execute:=diState=3, &#xD;
	Position:=Q_lrJ1 &#xD;
	);&#xD;
SYNC_J4(&#xD;
	Axis:=IQ_stJ4, &#xD;
	Execute:=diState=3, &#xD;
	Position:=Q_lrJ2 &#xD;
	);&#xD;
SYNC_J6(&#xD;
	Axis:=IQ_stJ6, &#xD;
	Execute:=diState=3, &#xD;
	Position:=Q_lrJ6 &#xD;
	);&#xD;
&#xD;
DISABLE_J1(&#xD;
	Axis:=IQ_stJ1, &#xD;
	Execute:=diState&lt;=0 AND IQ_stJ1.Status.Discrete, &#xD;
	Deceleration:=1000.0);&#xD;
DISABLE_J2(&#xD;
	Axis:=IQ_stJ2, &#xD;
	Execute:=diState&lt;=0 AND IQ_stJ2.Status.Discrete, &#xD;
	Deceleration:=1000.0);&#xD;
DISABLE_J3(&#xD;
	Axis:=IQ_stJ3, &#xD;
	Execute:=diState&lt;=0 AND IQ_stJ3.Status.Discrete, &#xD;
	Deceleration:=1000.0);&#xD;
DISABLE_J4(&#xD;
	Axis:=IQ_stJ4, &#xD;
	Execute:=diState&lt;=0 AND IQ_stJ4.Status.Discrete, &#xD;
	Deceleration:=1000.0);&#xD;
DISABLE_J6(&#xD;
	Axis:=IQ_stJ6, &#xD;
	Execute:=diState&lt;=0 AND IQ_stJ6.Status.Discrete, &#xD;
	Deceleration:=1000.0);&#xD;
STOP_CNC(&#xD;
	Coord:=IQ_stCNC_COORD_System, &#xD;
	Execute:=diState=5, &#xD;
	Deceleration:=alrCNC_DECELERATION, &#xD;
	Jerk:=0.0);&#xD;
	&#xD;
//TODO&#xD;
IF&#xD;
	NOT&#xD;
	(&#xD;
	POWER_J1.Status&#xD;
	AND&#xD;
	POWER_J2.Status&#xD;
	AND&#xD;
	POWER_J3.Status&#xD;
	AND&#xD;
	POWER_J4.Status&#xD;
	AND&#xD;
	POWER_J6.Status&#xD;
	)&#xD;
	AND&#xD;
	diState&lt;&gt;0&#xD;
THEN&#xD;
	diState:=-1000;&#xD;
	Q_sResult:='Robot not Ready';&#xD;
END_IF;&#xD;
IF&#xD;
	diState&lt;0&#xD;
	AND&#xD;
	NOT I_xEnable&#xD;
THEN&#xD;
	diState:=0;&#xD;
END_IF;&#xD;
IF&#xD;
	I_xJogJoints&#xD;
	AND&#xD;
	NOT I_xAuto&#xD;
THEN&#xD;
	diState:=0;&#xD;
END_IF;&#xD;
Q_xError:=diState&lt;0 OR IQ_stCNC_COORD_System.Status.ErrorStop;&#xD;
Q_xAuto:=diState=4 AND NOT IQ_stCNC_COORD_System.Status.ErrorStop;&#xD;
</Text></StructuredTextModel>